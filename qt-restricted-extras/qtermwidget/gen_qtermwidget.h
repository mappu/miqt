#pragma once
#ifndef MIQT_QT_RESTRICTED_EXTRAS_QTERMWIDGET_GEN_QTERMWIDGET_H
#define MIQT_QT_RESTRICTED_EXTRAS_QTERMWIDGET_GEN_QTERMWIDGET_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../../libmiqt/libmiqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAction;
class QActionEvent;
class QChildEvent;
class QCloseEvent;
class QContextMenuEvent;
class QDragEnterEvent;
class QDragLeaveEvent;
class QDragMoveEvent;
class QDropEvent;
class QEvent;
class QFocusEvent;
class QFont;
class QHideEvent;
class QIODevice;
class QInputMethodEvent;
class QKeyEvent;
class QMetaMethod;
class QMetaObject;
class QMouseEvent;
class QMoveEvent;
class QObject;
class QPaintDevice;
class QPaintEngine;
class QPaintEvent;
class QPainter;
class QPoint;
class QResizeEvent;
class QShowEvent;
class QSize;
class QTabletEvent;
class QTermWidget;
class QTermWidgetInterface;
class QTextCodec;
class QTimerEvent;
class QUrl;
class QVariant;
class QWheelEvent;
class QWidget;
#else
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QHideEvent QHideEvent;
typedef struct QIODevice QIODevice;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTermWidget QTermWidget;
typedef struct QTermWidgetInterface QTermWidgetInterface;
typedef struct QTextCodec QTextCodec;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

QTermWidget* QTermWidget_new(QWidget* parent);
QTermWidget* QTermWidget_new2(int startnow);
QTermWidget* QTermWidget_new3();
QTermWidget* QTermWidget_new4(int startnow, QWidget* parent);
void QTermWidget_virtbase(QTermWidget* src, QWidget** outptr_QWidget, QTermWidgetInterface** outptr_QTermWidgetInterface);
QMetaObject* QTermWidget_metaObject(const QTermWidget* self);
void* QTermWidget_metacast(QTermWidget* self, const char* param1);
struct miqt_string QTermWidget_tr(const char* s);
struct miqt_string QTermWidget_trUtf8(const char* s);
QSize* QTermWidget_sizeHint(const QTermWidget* self);
void QTermWidget_setTerminalSizeHint(QTermWidget* self, bool enabled);
bool QTermWidget_terminalSizeHint(QTermWidget* self);
void QTermWidget_startShellProgram(QTermWidget* self);
void QTermWidget_startTerminalTeletype(QTermWidget* self);
int QTermWidget_getShellPID(QTermWidget* self);
void QTermWidget_changeDir(QTermWidget* self, struct miqt_string dir);
void QTermWidget_setTerminalFont(QTermWidget* self, QFont* font);
QFont* QTermWidget_getTerminalFont(QTermWidget* self);
void QTermWidget_setTerminalOpacity(QTermWidget* self, double level);
void QTermWidget_setTerminalBackgroundImage(QTermWidget* self, struct miqt_string backgroundImage);
void QTermWidget_setTerminalBackgroundMode(QTermWidget* self, int mode);
void QTermWidget_setEnvironment(QTermWidget* self, struct miqt_array /* of struct miqt_string */  environment);
void QTermWidget_setShellProgram(QTermWidget* self, struct miqt_string program);
void QTermWidget_setWorkingDirectory(QTermWidget* self, struct miqt_string dir);
struct miqt_string QTermWidget_workingDirectory(QTermWidget* self);
void QTermWidget_setArgs(QTermWidget* self, struct miqt_array /* of struct miqt_string */  args);
void QTermWidget_setTextCodec(QTermWidget* self, QTextCodec* codec);
void QTermWidget_setColorScheme(QTermWidget* self, struct miqt_string name);
struct miqt_array /* of struct miqt_string */  QTermWidget_getAvailableColorSchemes(QTermWidget* self);
struct miqt_array /* of struct miqt_string */  QTermWidget_availableColorSchemes();
void QTermWidget_addCustomColorSchemeDir(struct miqt_string custom_dir);
void QTermWidget_setHistorySize(QTermWidget* self, int lines);
int QTermWidget_historySize(const QTermWidget* self);
void QTermWidget_setScrollBarPosition(QTermWidget* self, int scrollBarPosition);
void QTermWidget_scrollToEnd(QTermWidget* self);
void QTermWidget_sendText(QTermWidget* self, struct miqt_string text);
void QTermWidget_sendKeyEvent(QTermWidget* self, QKeyEvent* e);
void QTermWidget_setFlowControlEnabled(QTermWidget* self, bool enabled);
bool QTermWidget_flowControlEnabled(QTermWidget* self);
void QTermWidget_setFlowControlWarningEnabled(QTermWidget* self, bool enabled);
struct miqt_array /* of struct miqt_string */  QTermWidget_availableKeyBindings();
struct miqt_string QTermWidget_keyBindings(QTermWidget* self);
void QTermWidget_setMotionAfterPasting(QTermWidget* self, int motionAfterPasting);
int QTermWidget_historyLinesCount(QTermWidget* self);
int QTermWidget_screenColumnsCount(QTermWidget* self);
int QTermWidget_screenLinesCount(QTermWidget* self);
void QTermWidget_setSelectionStart(QTermWidget* self, int row, int column);
void QTermWidget_setSelectionEnd(QTermWidget* self, int row, int column);
void QTermWidget_getSelectionStart(QTermWidget* self, int* row, int* column);
void QTermWidget_getSelectionEnd(QTermWidget* self, int* row, int* column);
struct miqt_string QTermWidget_selectedText(QTermWidget* self, bool preserveLineBreaks);
void QTermWidget_setMonitorActivity(QTermWidget* self, bool monitorActivity);
void QTermWidget_setMonitorSilence(QTermWidget* self, bool monitorSilence);
void QTermWidget_setSilenceTimeout(QTermWidget* self, int seconds);
struct miqt_array /* of QAction* */  QTermWidget_filterActions(QTermWidget* self, QPoint* position);
int QTermWidget_getPtySlaveFd(const QTermWidget* self);
void QTermWidget_setKeyboardCursorShape(QTermWidget* self, int shape);
void QTermWidget_setBlinkingCursor(QTermWidget* self, bool blink);
void QTermWidget_setBidiEnabled(QTermWidget* self, bool enabled);
bool QTermWidget_isBidiEnabled(QTermWidget* self);
void QTermWidget_setAutoClose(QTermWidget* self, bool autoClose);
struct miqt_string QTermWidget_title(const QTermWidget* self);
struct miqt_string QTermWidget_icon(const QTermWidget* self);
bool QTermWidget_isTitleChanged(const QTermWidget* self);
void QTermWidget_bracketText(QTermWidget* self, struct miqt_string text);
void QTermWidget_disableBracketedPasteMode(QTermWidget* self, bool disable);
bool QTermWidget_bracketedPasteModeIsDisabled(const QTermWidget* self);
void QTermWidget_setMargin(QTermWidget* self, int margin);
int QTermWidget_getMargin(const QTermWidget* self);
void QTermWidget_setDrawLineChars(QTermWidget* self, bool drawLineChars);
void QTermWidget_setBoldIntense(QTermWidget* self, bool boldIntense);
void QTermWidget_setConfirmMultilinePaste(QTermWidget* self, bool confirmMultilinePaste);
void QTermWidget_setTrimPastedTrailingNewlines(QTermWidget* self, bool trimPastedTrailingNewlines);
QTermWidgetInterface* QTermWidget_createWidget(const QTermWidget* self, int startnow);
void QTermWidget_finished(QTermWidget* self);
void QTermWidget_connect_finished(QTermWidget* self, intptr_t slot);
void QTermWidget_copyAvailable(QTermWidget* self, bool param1);
void QTermWidget_connect_copyAvailable(QTermWidget* self, intptr_t slot);
void QTermWidget_termGetFocus(QTermWidget* self);
void QTermWidget_connect_termGetFocus(QTermWidget* self, intptr_t slot);
void QTermWidget_termLostFocus(QTermWidget* self);
void QTermWidget_connect_termLostFocus(QTermWidget* self, intptr_t slot);
void QTermWidget_termKeyPressed(QTermWidget* self, QKeyEvent* param1);
void QTermWidget_connect_termKeyPressed(QTermWidget* self, intptr_t slot);
void QTermWidget_urlActivated(QTermWidget* self, QUrl* param1, bool fromContextMenu);
void QTermWidget_connect_urlActivated(QTermWidget* self, intptr_t slot);
void QTermWidget_bell(QTermWidget* self, struct miqt_string message);
void QTermWidget_connect_bell(QTermWidget* self, intptr_t slot);
void QTermWidget_activity(QTermWidget* self);
void QTermWidget_connect_activity(QTermWidget* self, intptr_t slot);
void QTermWidget_silence(QTermWidget* self);
void QTermWidget_connect_silence(QTermWidget* self, intptr_t slot);
void QTermWidget_sendData(QTermWidget* self, const char* param1, int param2);
void QTermWidget_connect_sendData(QTermWidget* self, intptr_t slot);
void QTermWidget_profileChanged(QTermWidget* self, struct miqt_string profile);
void QTermWidget_connect_profileChanged(QTermWidget* self, intptr_t slot);
void QTermWidget_titleChanged(QTermWidget* self);
void QTermWidget_connect_titleChanged(QTermWidget* self, intptr_t slot);
void QTermWidget_receivedData(QTermWidget* self, struct miqt_string text);
void QTermWidget_connect_receivedData(QTermWidget* self, intptr_t slot);
void QTermWidget_copyClipboard(QTermWidget* self);
void QTermWidget_pasteClipboard(QTermWidget* self);
void QTermWidget_pasteSelection(QTermWidget* self);
void QTermWidget_zoomIn(QTermWidget* self);
void QTermWidget_zoomOut(QTermWidget* self);
void QTermWidget_setSize(QTermWidget* self, QSize* size);
void QTermWidget_setKeyBindings(QTermWidget* self, struct miqt_string kb);
void QTermWidget_clear(QTermWidget* self);
void QTermWidget_toggleShowSearchBar(QTermWidget* self);
void QTermWidget_saveHistory(QTermWidget* self, QIODevice* device);
void QTermWidget_resizeEvent(QTermWidget* self, QResizeEvent* param1);
struct miqt_string QTermWidget_tr2(const char* s, const char* c);
struct miqt_string QTermWidget_tr3(const char* s, const char* c, int n);
struct miqt_string QTermWidget_trUtf82(const char* s, const char* c);
struct miqt_string QTermWidget_trUtf83(const char* s, const char* c, int n);
bool QTermWidget_override_virtual_sizeHint(void* self, intptr_t slot);
QSize* QTermWidget_virtualbase_sizeHint(const void* self);
bool QTermWidget_override_virtual_setTerminalSizeHint(void* self, intptr_t slot);
void QTermWidget_virtualbase_setTerminalSizeHint(void* self, bool enabled);
bool QTermWidget_override_virtual_terminalSizeHint(void* self, intptr_t slot);
bool QTermWidget_virtualbase_terminalSizeHint(void* self);
bool QTermWidget_override_virtual_startShellProgram(void* self, intptr_t slot);
void QTermWidget_virtualbase_startShellProgram(void* self);
bool QTermWidget_override_virtual_startTerminalTeletype(void* self, intptr_t slot);
void QTermWidget_virtualbase_startTerminalTeletype(void* self);
bool QTermWidget_override_virtual_getShellPID(void* self, intptr_t slot);
int QTermWidget_virtualbase_getShellPID(void* self);
bool QTermWidget_override_virtual_changeDir(void* self, intptr_t slot);
void QTermWidget_virtualbase_changeDir(void* self, struct miqt_string dir);
bool QTermWidget_override_virtual_setTerminalFont(void* self, intptr_t slot);
void QTermWidget_virtualbase_setTerminalFont(void* self, QFont* font);
bool QTermWidget_override_virtual_getTerminalFont(void* self, intptr_t slot);
QFont* QTermWidget_virtualbase_getTerminalFont(void* self);
bool QTermWidget_override_virtual_setTerminalOpacity(void* self, intptr_t slot);
void QTermWidget_virtualbase_setTerminalOpacity(void* self, double level);
bool QTermWidget_override_virtual_setTerminalBackgroundImage(void* self, intptr_t slot);
void QTermWidget_virtualbase_setTerminalBackgroundImage(void* self, struct miqt_string backgroundImage);
bool QTermWidget_override_virtual_setTerminalBackgroundMode(void* self, intptr_t slot);
void QTermWidget_virtualbase_setTerminalBackgroundMode(void* self, int mode);
bool QTermWidget_override_virtual_setEnvironment(void* self, intptr_t slot);
void QTermWidget_virtualbase_setEnvironment(void* self, struct miqt_array /* of struct miqt_string */  environment);
bool QTermWidget_override_virtual_setShellProgram(void* self, intptr_t slot);
void QTermWidget_virtualbase_setShellProgram(void* self, struct miqt_string program);
bool QTermWidget_override_virtual_setWorkingDirectory(void* self, intptr_t slot);
void QTermWidget_virtualbase_setWorkingDirectory(void* self, struct miqt_string dir);
bool QTermWidget_override_virtual_workingDirectory(void* self, intptr_t slot);
struct miqt_string QTermWidget_virtualbase_workingDirectory(void* self);
bool QTermWidget_override_virtual_setArgs(void* self, intptr_t slot);
void QTermWidget_virtualbase_setArgs(void* self, struct miqt_array /* of struct miqt_string */  args);
bool QTermWidget_override_virtual_setTextCodec(void* self, intptr_t slot);
void QTermWidget_virtualbase_setTextCodec(void* self, QTextCodec* codec);
bool QTermWidget_override_virtual_setColorScheme(void* self, intptr_t slot);
void QTermWidget_virtualbase_setColorScheme(void* self, struct miqt_string name);
bool QTermWidget_override_virtual_getAvailableColorSchemes(void* self, intptr_t slot);
struct miqt_array /* of struct miqt_string */  QTermWidget_virtualbase_getAvailableColorSchemes(void* self);
bool QTermWidget_override_virtual_setHistorySize(void* self, intptr_t slot);
void QTermWidget_virtualbase_setHistorySize(void* self, int lines);
bool QTermWidget_override_virtual_historySize(void* self, intptr_t slot);
int QTermWidget_virtualbase_historySize(const void* self);
bool QTermWidget_override_virtual_setScrollBarPosition(void* self, intptr_t slot);
void QTermWidget_virtualbase_setScrollBarPosition(void* self, int scrollBarPosition);
bool QTermWidget_override_virtual_scrollToEnd(void* self, intptr_t slot);
void QTermWidget_virtualbase_scrollToEnd(void* self);
bool QTermWidget_override_virtual_sendText(void* self, intptr_t slot);
void QTermWidget_virtualbase_sendText(void* self, struct miqt_string text);
bool QTermWidget_override_virtual_sendKeyEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_sendKeyEvent(void* self, QKeyEvent* e);
bool QTermWidget_override_virtual_setFlowControlEnabled(void* self, intptr_t slot);
void QTermWidget_virtualbase_setFlowControlEnabled(void* self, bool enabled);
bool QTermWidget_override_virtual_flowControlEnabled(void* self, intptr_t slot);
bool QTermWidget_virtualbase_flowControlEnabled(void* self);
bool QTermWidget_override_virtual_setFlowControlWarningEnabled(void* self, intptr_t slot);
void QTermWidget_virtualbase_setFlowControlWarningEnabled(void* self, bool enabled);
bool QTermWidget_override_virtual_keyBindings(void* self, intptr_t slot);
struct miqt_string QTermWidget_virtualbase_keyBindings(void* self);
bool QTermWidget_override_virtual_setMotionAfterPasting(void* self, intptr_t slot);
void QTermWidget_virtualbase_setMotionAfterPasting(void* self, int motionAfterPasting);
bool QTermWidget_override_virtual_historyLinesCount(void* self, intptr_t slot);
int QTermWidget_virtualbase_historyLinesCount(void* self);
bool QTermWidget_override_virtual_screenColumnsCount(void* self, intptr_t slot);
int QTermWidget_virtualbase_screenColumnsCount(void* self);
bool QTermWidget_override_virtual_screenLinesCount(void* self, intptr_t slot);
int QTermWidget_virtualbase_screenLinesCount(void* self);
bool QTermWidget_override_virtual_setSelectionStart(void* self, intptr_t slot);
void QTermWidget_virtualbase_setSelectionStart(void* self, int row, int column);
bool QTermWidget_override_virtual_setSelectionEnd(void* self, intptr_t slot);
void QTermWidget_virtualbase_setSelectionEnd(void* self, int row, int column);
bool QTermWidget_override_virtual_getSelectionStart(void* self, intptr_t slot);
void QTermWidget_virtualbase_getSelectionStart(void* self, int* row, int* column);
bool QTermWidget_override_virtual_getSelectionEnd(void* self, intptr_t slot);
void QTermWidget_virtualbase_getSelectionEnd(void* self, int* row, int* column);
bool QTermWidget_override_virtual_selectedText(void* self, intptr_t slot);
struct miqt_string QTermWidget_virtualbase_selectedText(void* self, bool preserveLineBreaks);
bool QTermWidget_override_virtual_setMonitorActivity(void* self, intptr_t slot);
void QTermWidget_virtualbase_setMonitorActivity(void* self, bool monitorActivity);
bool QTermWidget_override_virtual_setMonitorSilence(void* self, intptr_t slot);
void QTermWidget_virtualbase_setMonitorSilence(void* self, bool monitorSilence);
bool QTermWidget_override_virtual_setSilenceTimeout(void* self, intptr_t slot);
void QTermWidget_virtualbase_setSilenceTimeout(void* self, int seconds);
bool QTermWidget_override_virtual_filterActions(void* self, intptr_t slot);
struct miqt_array /* of QAction* */  QTermWidget_virtualbase_filterActions(void* self, QPoint* position);
bool QTermWidget_override_virtual_getPtySlaveFd(void* self, intptr_t slot);
int QTermWidget_virtualbase_getPtySlaveFd(const void* self);
bool QTermWidget_override_virtual_setBlinkingCursor(void* self, intptr_t slot);
void QTermWidget_virtualbase_setBlinkingCursor(void* self, bool blink);
bool QTermWidget_override_virtual_setBidiEnabled(void* self, intptr_t slot);
void QTermWidget_virtualbase_setBidiEnabled(void* self, bool enabled);
bool QTermWidget_override_virtual_isBidiEnabled(void* self, intptr_t slot);
bool QTermWidget_virtualbase_isBidiEnabled(void* self);
bool QTermWidget_override_virtual_setAutoClose(void* self, intptr_t slot);
void QTermWidget_virtualbase_setAutoClose(void* self, bool autoClose);
bool QTermWidget_override_virtual_title(void* self, intptr_t slot);
struct miqt_string QTermWidget_virtualbase_title(const void* self);
bool QTermWidget_override_virtual_icon(void* self, intptr_t slot);
struct miqt_string QTermWidget_virtualbase_icon(const void* self);
bool QTermWidget_override_virtual_isTitleChanged(void* self, intptr_t slot);
bool QTermWidget_virtualbase_isTitleChanged(const void* self);
bool QTermWidget_override_virtual_bracketText(void* self, intptr_t slot);
void QTermWidget_virtualbase_bracketText(void* self, struct miqt_string text);
bool QTermWidget_override_virtual_disableBracketedPasteMode(void* self, intptr_t slot);
void QTermWidget_virtualbase_disableBracketedPasteMode(void* self, bool disable);
bool QTermWidget_override_virtual_bracketedPasteModeIsDisabled(void* self, intptr_t slot);
bool QTermWidget_virtualbase_bracketedPasteModeIsDisabled(const void* self);
bool QTermWidget_override_virtual_setMargin(void* self, intptr_t slot);
void QTermWidget_virtualbase_setMargin(void* self, int margin);
bool QTermWidget_override_virtual_getMargin(void* self, intptr_t slot);
int QTermWidget_virtualbase_getMargin(const void* self);
bool QTermWidget_override_virtual_setDrawLineChars(void* self, intptr_t slot);
void QTermWidget_virtualbase_setDrawLineChars(void* self, bool drawLineChars);
bool QTermWidget_override_virtual_setBoldIntense(void* self, intptr_t slot);
void QTermWidget_virtualbase_setBoldIntense(void* self, bool boldIntense);
bool QTermWidget_override_virtual_setConfirmMultilinePaste(void* self, intptr_t slot);
void QTermWidget_virtualbase_setConfirmMultilinePaste(void* self, bool confirmMultilinePaste);
bool QTermWidget_override_virtual_setTrimPastedTrailingNewlines(void* self, intptr_t slot);
void QTermWidget_virtualbase_setTrimPastedTrailingNewlines(void* self, bool trimPastedTrailingNewlines);
bool QTermWidget_override_virtual_createWidget(void* self, intptr_t slot);
QTermWidgetInterface* QTermWidget_virtualbase_createWidget(const void* self, int startnow);
bool QTermWidget_override_virtual_resizeEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_resizeEvent(void* self, QResizeEvent* param1);
bool QTermWidget_override_virtual_devType(void* self, intptr_t slot);
int QTermWidget_virtualbase_devType(const void* self);
bool QTermWidget_override_virtual_setVisible(void* self, intptr_t slot);
void QTermWidget_virtualbase_setVisible(void* self, bool visible);
bool QTermWidget_override_virtual_minimumSizeHint(void* self, intptr_t slot);
QSize* QTermWidget_virtualbase_minimumSizeHint(const void* self);
bool QTermWidget_override_virtual_heightForWidth(void* self, intptr_t slot);
int QTermWidget_virtualbase_heightForWidth(const void* self, int param1);
bool QTermWidget_override_virtual_hasHeightForWidth(void* self, intptr_t slot);
bool QTermWidget_virtualbase_hasHeightForWidth(const void* self);
bool QTermWidget_override_virtual_paintEngine(void* self, intptr_t slot);
QPaintEngine* QTermWidget_virtualbase_paintEngine(const void* self);
bool QTermWidget_override_virtual_event(void* self, intptr_t slot);
bool QTermWidget_virtualbase_event(void* self, QEvent* event);
bool QTermWidget_override_virtual_mousePressEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_mousePressEvent(void* self, QMouseEvent* event);
bool QTermWidget_override_virtual_mouseReleaseEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_mouseReleaseEvent(void* self, QMouseEvent* event);
bool QTermWidget_override_virtual_mouseDoubleClickEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_mouseDoubleClickEvent(void* self, QMouseEvent* event);
bool QTermWidget_override_virtual_mouseMoveEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_mouseMoveEvent(void* self, QMouseEvent* event);
bool QTermWidget_override_virtual_wheelEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_wheelEvent(void* self, QWheelEvent* event);
bool QTermWidget_override_virtual_keyPressEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_keyPressEvent(void* self, QKeyEvent* event);
bool QTermWidget_override_virtual_keyReleaseEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_keyReleaseEvent(void* self, QKeyEvent* event);
bool QTermWidget_override_virtual_focusInEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_focusInEvent(void* self, QFocusEvent* event);
bool QTermWidget_override_virtual_focusOutEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_focusOutEvent(void* self, QFocusEvent* event);
bool QTermWidget_override_virtual_enterEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_enterEvent(void* self, QEvent* event);
bool QTermWidget_override_virtual_leaveEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_leaveEvent(void* self, QEvent* event);
bool QTermWidget_override_virtual_paintEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_paintEvent(void* self, QPaintEvent* event);
bool QTermWidget_override_virtual_moveEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_moveEvent(void* self, QMoveEvent* event);
bool QTermWidget_override_virtual_closeEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_closeEvent(void* self, QCloseEvent* event);
bool QTermWidget_override_virtual_contextMenuEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_contextMenuEvent(void* self, QContextMenuEvent* event);
bool QTermWidget_override_virtual_tabletEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_tabletEvent(void* self, QTabletEvent* event);
bool QTermWidget_override_virtual_actionEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_actionEvent(void* self, QActionEvent* event);
bool QTermWidget_override_virtual_dragEnterEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_dragEnterEvent(void* self, QDragEnterEvent* event);
bool QTermWidget_override_virtual_dragMoveEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_dragMoveEvent(void* self, QDragMoveEvent* event);
bool QTermWidget_override_virtual_dragLeaveEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_dragLeaveEvent(void* self, QDragLeaveEvent* event);
bool QTermWidget_override_virtual_dropEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_dropEvent(void* self, QDropEvent* event);
bool QTermWidget_override_virtual_showEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_showEvent(void* self, QShowEvent* event);
bool QTermWidget_override_virtual_hideEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_hideEvent(void* self, QHideEvent* event);
bool QTermWidget_override_virtual_nativeEvent(void* self, intptr_t slot);
bool QTermWidget_virtualbase_nativeEvent(void* self, struct miqt_string eventType, void* message, long* result);
bool QTermWidget_override_virtual_changeEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_changeEvent(void* self, QEvent* param1);
bool QTermWidget_override_virtual_metric(void* self, intptr_t slot);
int QTermWidget_virtualbase_metric(const void* self, int param1);
bool QTermWidget_override_virtual_initPainter(void* self, intptr_t slot);
void QTermWidget_virtualbase_initPainter(const void* self, QPainter* painter);
bool QTermWidget_override_virtual_redirected(void* self, intptr_t slot);
QPaintDevice* QTermWidget_virtualbase_redirected(const void* self, QPoint* offset);
bool QTermWidget_override_virtual_sharedPainter(void* self, intptr_t slot);
QPainter* QTermWidget_virtualbase_sharedPainter(const void* self);
bool QTermWidget_override_virtual_inputMethodEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_inputMethodEvent(void* self, QInputMethodEvent* param1);
bool QTermWidget_override_virtual_inputMethodQuery(void* self, intptr_t slot);
QVariant* QTermWidget_virtualbase_inputMethodQuery(const void* self, int param1);
bool QTermWidget_override_virtual_focusNextPrevChild(void* self, intptr_t slot);
bool QTermWidget_virtualbase_focusNextPrevChild(void* self, bool next);
bool QTermWidget_override_virtual_eventFilter(void* self, intptr_t slot);
bool QTermWidget_virtualbase_eventFilter(void* self, QObject* watched, QEvent* event);
bool QTermWidget_override_virtual_timerEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_timerEvent(void* self, QTimerEvent* event);
bool QTermWidget_override_virtual_childEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_childEvent(void* self, QChildEvent* event);
bool QTermWidget_override_virtual_customEvent(void* self, intptr_t slot);
void QTermWidget_virtualbase_customEvent(void* self, QEvent* event);
bool QTermWidget_override_virtual_connectNotify(void* self, intptr_t slot);
void QTermWidget_virtualbase_connectNotify(void* self, QMetaMethod* signal);
bool QTermWidget_override_virtual_disconnectNotify(void* self, intptr_t slot);
void QTermWidget_virtualbase_disconnectNotify(void* self, QMetaMethod* signal);
void QTermWidget_protectedbase_sessionFinished(bool* _dynamic_cast_ok, void* self);
void QTermWidget_protectedbase_selectionChanged(bool* _dynamic_cast_ok, void* self, bool textSelected);
void QTermWidget_protectedbase_updateMicroFocus(bool* _dynamic_cast_ok, void* self);
void QTermWidget_protectedbase_create(bool* _dynamic_cast_ok, void* self);
void QTermWidget_protectedbase_destroy(bool* _dynamic_cast_ok, void* self);
bool QTermWidget_protectedbase_focusNextChild(bool* _dynamic_cast_ok, void* self);
bool QTermWidget_protectedbase_focusPreviousChild(bool* _dynamic_cast_ok, void* self);
QObject* QTermWidget_protectedbase_sender(bool* _dynamic_cast_ok, const void* self);
int QTermWidget_protectedbase_senderSignalIndex(bool* _dynamic_cast_ok, const void* self);
int QTermWidget_protectedbase_receivers(bool* _dynamic_cast_ok, const void* self, const char* signal);
bool QTermWidget_protectedbase_isSignalConnected(bool* _dynamic_cast_ok, const void* self, QMetaMethod* signal);
void QTermWidget_delete(QTermWidget* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
