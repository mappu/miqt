#pragma once
#ifndef MIQT_QT_RESTRICTED_EXTRAS_CHARTS6_GEN_QCHART_H
#define MIQT_QT_RESTRICTED_EXTRAS_CHARTS6_GEN_QCHART_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../../libmiqt/libmiqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAbstractAxis;
class QAbstractSeries;
class QBrush;
class QChart;
class QChildEvent;
class QCloseEvent;
class QEasingCurve;
class QEvent;
class QFocusEvent;
class QFont;
class QGraphicsItem;
class QGraphicsLayoutItem;
class QGraphicsObject;
class QGraphicsSceneContextMenuEvent;
class QGraphicsSceneDragDropEvent;
class QGraphicsSceneHoverEvent;
class QGraphicsSceneMouseEvent;
class QGraphicsSceneMoveEvent;
class QGraphicsSceneResizeEvent;
class QGraphicsSceneWheelEvent;
class QGraphicsWidget;
class QHideEvent;
class QInputMethodEvent;
class QKeyEvent;
class QLegend;
class QLocale;
class QMargins;
class QMetaMethod;
class QMetaObject;
class QObject;
class QPainter;
class QPainterPath;
class QPen;
class QPointF;
class QRectF;
class QShowEvent;
class QSizeF;
class QStyleOption;
class QStyleOptionGraphicsItem;
class QTimerEvent;
class QVariant;
class QWidget;
#else
typedef struct QAbstractAxis QAbstractAxis;
typedef struct QAbstractSeries QAbstractSeries;
typedef struct QBrush QBrush;
typedef struct QChart QChart;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QEasingCurve QEasingCurve;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QGraphicsItem QGraphicsItem;
typedef struct QGraphicsLayoutItem QGraphicsLayoutItem;
typedef struct QGraphicsObject QGraphicsObject;
typedef struct QGraphicsSceneContextMenuEvent QGraphicsSceneContextMenuEvent;
typedef struct QGraphicsSceneDragDropEvent QGraphicsSceneDragDropEvent;
typedef struct QGraphicsSceneHoverEvent QGraphicsSceneHoverEvent;
typedef struct QGraphicsSceneMouseEvent QGraphicsSceneMouseEvent;
typedef struct QGraphicsSceneMoveEvent QGraphicsSceneMoveEvent;
typedef struct QGraphicsSceneResizeEvent QGraphicsSceneResizeEvent;
typedef struct QGraphicsSceneWheelEvent QGraphicsSceneWheelEvent;
typedef struct QGraphicsWidget QGraphicsWidget;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QLegend QLegend;
typedef struct QLocale QLocale;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QObject QObject;
typedef struct QPainter QPainter;
typedef struct QPainterPath QPainterPath;
typedef struct QPen QPen;
typedef struct QPointF QPointF;
typedef struct QRectF QRectF;
typedef struct QShowEvent QShowEvent;
typedef struct QSizeF QSizeF;
typedef struct QStyleOption QStyleOption;
typedef struct QStyleOptionGraphicsItem QStyleOptionGraphicsItem;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWidget QWidget;
#endif

QChart* QChart_new();
QChart* QChart_new2(QGraphicsItem* parent);
QChart* QChart_new3(QGraphicsItem* parent, int wFlags);
void QChart_virtbase(QChart* src, QGraphicsWidget** outptr_QGraphicsWidget);
QMetaObject* QChart_metaObject(const QChart* self);
void* QChart_metacast(QChart* self, const char* param1);
struct miqt_string QChart_tr(const char* s);
void QChart_addSeries(QChart* self, QAbstractSeries* series);
void QChart_removeSeries(QChart* self, QAbstractSeries* series);
void QChart_removeAllSeries(QChart* self);
struct miqt_array /* of QAbstractSeries* */  QChart_series(const QChart* self);
void QChart_setAxisX(QChart* self, QAbstractAxis* axis);
void QChart_setAxisY(QChart* self, QAbstractAxis* axis);
QAbstractAxis* QChart_axisX(const QChart* self);
QAbstractAxis* QChart_axisY(const QChart* self);
void QChart_addAxis(QChart* self, QAbstractAxis* axis, int alignment);
void QChart_removeAxis(QChart* self, QAbstractAxis* axis);
struct miqt_array /* of QAbstractAxis* */  QChart_axes(const QChart* self);
void QChart_createDefaultAxes(QChart* self);
void QChart_setTheme(QChart* self, int theme);
int QChart_theme(const QChart* self);
void QChart_setTitle(QChart* self, struct miqt_string title);
struct miqt_string QChart_title(const QChart* self);
void QChart_setTitleFont(QChart* self, QFont* font);
QFont* QChart_titleFont(const QChart* self);
void QChart_setTitleBrush(QChart* self, QBrush* brush);
QBrush* QChart_titleBrush(const QChart* self);
void QChart_setBackgroundBrush(QChart* self, QBrush* brush);
QBrush* QChart_backgroundBrush(const QChart* self);
void QChart_setBackgroundPen(QChart* self, QPen* pen);
QPen* QChart_backgroundPen(const QChart* self);
void QChart_setBackgroundVisible(QChart* self);
bool QChart_isBackgroundVisible(const QChart* self);
void QChart_setDropShadowEnabled(QChart* self);
bool QChart_isDropShadowEnabled(const QChart* self);
void QChart_setBackgroundRoundness(QChart* self, double diameter);
double QChart_backgroundRoundness(const QChart* self);
void QChart_setAnimationOptions(QChart* self, int options);
int QChart_animationOptions(const QChart* self);
void QChart_setAnimationDuration(QChart* self, int msecs);
int QChart_animationDuration(const QChart* self);
void QChart_setAnimationEasingCurve(QChart* self, QEasingCurve* curve);
QEasingCurve* QChart_animationEasingCurve(const QChart* self);
void QChart_zoomIn(QChart* self);
void QChart_zoomOut(QChart* self);
void QChart_zoomInWithRect(QChart* self, QRectF* rect);
void QChart_zoom(QChart* self, double factor);
void QChart_zoomReset(QChart* self);
bool QChart_isZoomed(QChart* self);
void QChart_scroll(QChart* self, double dx, double dy);
QLegend* QChart_legend(const QChart* self);
void QChart_setMargins(QChart* self, QMargins* margins);
QMargins* QChart_margins(const QChart* self);
QRectF* QChart_plotArea(const QChart* self);
void QChart_setPlotArea(QChart* self, QRectF* rect);
void QChart_setPlotAreaBackgroundBrush(QChart* self, QBrush* brush);
QBrush* QChart_plotAreaBackgroundBrush(const QChart* self);
void QChart_setPlotAreaBackgroundPen(QChart* self, QPen* pen);
QPen* QChart_plotAreaBackgroundPen(const QChart* self);
void QChart_setPlotAreaBackgroundVisible(QChart* self);
bool QChart_isPlotAreaBackgroundVisible(const QChart* self);
void QChart_setLocalizeNumbers(QChart* self, bool localize);
bool QChart_localizeNumbers(const QChart* self);
void QChart_setLocale(QChart* self, QLocale* locale);
QLocale* QChart_locale(const QChart* self);
QPointF* QChart_mapToValue(QChart* self, QPointF* position);
QPointF* QChart_mapToPosition(QChart* self, QPointF* value);
int QChart_chartType(const QChart* self);
void QChart_plotAreaChanged(QChart* self, QRectF* plotArea);
void QChart_connect_plotAreaChanged(QChart* self, intptr_t slot);
struct miqt_string QChart_tr2(const char* s, const char* c);
struct miqt_string QChart_tr3(const char* s, const char* c, int n);
void QChart_setAxisX2(QChart* self, QAbstractAxis* axis, QAbstractSeries* series);
void QChart_setAxisY2(QChart* self, QAbstractAxis* axis, QAbstractSeries* series);
QAbstractAxis* QChart_axisXWithSeries(const QChart* self, QAbstractSeries* series);
QAbstractAxis* QChart_axisYWithSeries(const QChart* self, QAbstractSeries* series);
struct miqt_array /* of QAbstractAxis* */  QChart_axesWithOrientation(const QChart* self, int orientation);
struct miqt_array /* of QAbstractAxis* */  QChart_axes2(const QChart* self, int orientation, QAbstractSeries* series);
void QChart_setBackgroundVisibleWithVisible(QChart* self, bool visible);
void QChart_setDropShadowEnabledWithEnabled(QChart* self, bool enabled);
void QChart_setPlotAreaBackgroundVisibleWithVisible(QChart* self, bool visible);
QPointF* QChart_mapToValue2(QChart* self, QPointF* position, QAbstractSeries* series);
QPointF* QChart_mapToPosition2(QChart* self, QPointF* value, QAbstractSeries* series);

bool QChart_override_virtual_setGeometry(void* self, intptr_t slot);
void QChart_virtualbase_setGeometry(void* self, QRectF* rect);
bool QChart_override_virtual_getContentsMargins(void* self, intptr_t slot);
void QChart_virtualbase_getContentsMargins(const void* self, double* left, double* top, double* right, double* bottom);
bool QChart_override_virtual_type(void* self, intptr_t slot);
int QChart_virtualbase_type(const void* self);
bool QChart_override_virtual_paint(void* self, intptr_t slot);
void QChart_virtualbase_paint(void* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QChart_override_virtual_paintWindowFrame(void* self, intptr_t slot);
void QChart_virtualbase_paintWindowFrame(void* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QChart_override_virtual_boundingRect(void* self, intptr_t slot);
QRectF* QChart_virtualbase_boundingRect(const void* self);
bool QChart_override_virtual_shape(void* self, intptr_t slot);
QPainterPath* QChart_virtualbase_shape(const void* self);
bool QChart_override_virtual_initStyleOption(void* self, intptr_t slot);
void QChart_virtualbase_initStyleOption(const void* self, QStyleOption* option);
bool QChart_override_virtual_sizeHint(void* self, intptr_t slot);
QSizeF* QChart_virtualbase_sizeHint(const void* self, int which, QSizeF* constraint);
bool QChart_override_virtual_updateGeometry(void* self, intptr_t slot);
void QChart_virtualbase_updateGeometry(void* self);
bool QChart_override_virtual_itemChange(void* self, intptr_t slot);
QVariant* QChart_virtualbase_itemChange(void* self, int change, QVariant* value);
bool QChart_override_virtual_propertyChange(void* self, intptr_t slot);
QVariant* QChart_virtualbase_propertyChange(void* self, struct miqt_string propertyName, QVariant* value);
bool QChart_override_virtual_sceneEvent(void* self, intptr_t slot);
bool QChart_virtualbase_sceneEvent(void* self, QEvent* event);
bool QChart_override_virtual_windowFrameEvent(void* self, intptr_t slot);
bool QChart_virtualbase_windowFrameEvent(void* self, QEvent* e);
bool QChart_override_virtual_windowFrameSectionAt(void* self, intptr_t slot);
int QChart_virtualbase_windowFrameSectionAt(const void* self, QPointF* pos);
bool QChart_override_virtual_event(void* self, intptr_t slot);
bool QChart_virtualbase_event(void* self, QEvent* event);
bool QChart_override_virtual_changeEvent(void* self, intptr_t slot);
void QChart_virtualbase_changeEvent(void* self, QEvent* event);
bool QChart_override_virtual_closeEvent(void* self, intptr_t slot);
void QChart_virtualbase_closeEvent(void* self, QCloseEvent* event);
bool QChart_override_virtual_focusInEvent(void* self, intptr_t slot);
void QChart_virtualbase_focusInEvent(void* self, QFocusEvent* event);
bool QChart_override_virtual_focusNextPrevChild(void* self, intptr_t slot);
bool QChart_virtualbase_focusNextPrevChild(void* self, bool next);
bool QChart_override_virtual_focusOutEvent(void* self, intptr_t slot);
void QChart_virtualbase_focusOutEvent(void* self, QFocusEvent* event);
bool QChart_override_virtual_hideEvent(void* self, intptr_t slot);
void QChart_virtualbase_hideEvent(void* self, QHideEvent* event);
bool QChart_override_virtual_moveEvent(void* self, intptr_t slot);
void QChart_virtualbase_moveEvent(void* self, QGraphicsSceneMoveEvent* event);
bool QChart_override_virtual_polishEvent(void* self, intptr_t slot);
void QChart_virtualbase_polishEvent(void* self);
bool QChart_override_virtual_resizeEvent(void* self, intptr_t slot);
void QChart_virtualbase_resizeEvent(void* self, QGraphicsSceneResizeEvent* event);
bool QChart_override_virtual_showEvent(void* self, intptr_t slot);
void QChart_virtualbase_showEvent(void* self, QShowEvent* event);
bool QChart_override_virtual_hoverMoveEvent(void* self, intptr_t slot);
void QChart_virtualbase_hoverMoveEvent(void* self, QGraphicsSceneHoverEvent* event);
bool QChart_override_virtual_hoverLeaveEvent(void* self, intptr_t slot);
void QChart_virtualbase_hoverLeaveEvent(void* self, QGraphicsSceneHoverEvent* event);
bool QChart_override_virtual_grabMouseEvent(void* self, intptr_t slot);
void QChart_virtualbase_grabMouseEvent(void* self, QEvent* event);
bool QChart_override_virtual_ungrabMouseEvent(void* self, intptr_t slot);
void QChart_virtualbase_ungrabMouseEvent(void* self, QEvent* event);
bool QChart_override_virtual_grabKeyboardEvent(void* self, intptr_t slot);
void QChart_virtualbase_grabKeyboardEvent(void* self, QEvent* event);
bool QChart_override_virtual_ungrabKeyboardEvent(void* self, intptr_t slot);
void QChart_virtualbase_ungrabKeyboardEvent(void* self, QEvent* event);
bool QChart_override_virtual_eventFilter(void* self, intptr_t slot);
bool QChart_virtualbase_eventFilter(void* self, QObject* watched, QEvent* event);
bool QChart_override_virtual_timerEvent(void* self, intptr_t slot);
void QChart_virtualbase_timerEvent(void* self, QTimerEvent* event);
bool QChart_override_virtual_childEvent(void* self, intptr_t slot);
void QChart_virtualbase_childEvent(void* self, QChildEvent* event);
bool QChart_override_virtual_customEvent(void* self, intptr_t slot);
void QChart_virtualbase_customEvent(void* self, QEvent* event);
bool QChart_override_virtual_connectNotify(void* self, intptr_t slot);
void QChart_virtualbase_connectNotify(void* self, QMetaMethod* signal);
bool QChart_override_virtual_disconnectNotify(void* self, intptr_t slot);
void QChart_virtualbase_disconnectNotify(void* self, QMetaMethod* signal);
bool QChart_override_virtual_advance(void* self, intptr_t slot);
void QChart_virtualbase_advance(void* self, int phase);
bool QChart_override_virtual_contains(void* self, intptr_t slot);
bool QChart_virtualbase_contains(const void* self, QPointF* point);
bool QChart_override_virtual_collidesWithItem(void* self, intptr_t slot);
bool QChart_virtualbase_collidesWithItem(const void* self, QGraphicsItem* other, int mode);
bool QChart_override_virtual_collidesWithPath(void* self, intptr_t slot);
bool QChart_virtualbase_collidesWithPath(const void* self, QPainterPath* path, int mode);
bool QChart_override_virtual_isObscuredBy(void* self, intptr_t slot);
bool QChart_virtualbase_isObscuredBy(const void* self, QGraphicsItem* item);
bool QChart_override_virtual_opaqueArea(void* self, intptr_t slot);
QPainterPath* QChart_virtualbase_opaqueArea(const void* self);
bool QChart_override_virtual_sceneEventFilter(void* self, intptr_t slot);
bool QChart_virtualbase_sceneEventFilter(void* self, QGraphicsItem* watched, QEvent* event);
bool QChart_override_virtual_contextMenuEvent(void* self, intptr_t slot);
void QChart_virtualbase_contextMenuEvent(void* self, QGraphicsSceneContextMenuEvent* event);
bool QChart_override_virtual_dragEnterEvent(void* self, intptr_t slot);
void QChart_virtualbase_dragEnterEvent(void* self, QGraphicsSceneDragDropEvent* event);
bool QChart_override_virtual_dragLeaveEvent(void* self, intptr_t slot);
void QChart_virtualbase_dragLeaveEvent(void* self, QGraphicsSceneDragDropEvent* event);
bool QChart_override_virtual_dragMoveEvent(void* self, intptr_t slot);
void QChart_virtualbase_dragMoveEvent(void* self, QGraphicsSceneDragDropEvent* event);
bool QChart_override_virtual_dropEvent(void* self, intptr_t slot);
void QChart_virtualbase_dropEvent(void* self, QGraphicsSceneDragDropEvent* event);
bool QChart_override_virtual_hoverEnterEvent(void* self, intptr_t slot);
void QChart_virtualbase_hoverEnterEvent(void* self, QGraphicsSceneHoverEvent* event);
bool QChart_override_virtual_keyPressEvent(void* self, intptr_t slot);
void QChart_virtualbase_keyPressEvent(void* self, QKeyEvent* event);
bool QChart_override_virtual_keyReleaseEvent(void* self, intptr_t slot);
void QChart_virtualbase_keyReleaseEvent(void* self, QKeyEvent* event);
bool QChart_override_virtual_mousePressEvent(void* self, intptr_t slot);
void QChart_virtualbase_mousePressEvent(void* self, QGraphicsSceneMouseEvent* event);
bool QChart_override_virtual_mouseMoveEvent(void* self, intptr_t slot);
void QChart_virtualbase_mouseMoveEvent(void* self, QGraphicsSceneMouseEvent* event);
bool QChart_override_virtual_mouseReleaseEvent(void* self, intptr_t slot);
void QChart_virtualbase_mouseReleaseEvent(void* self, QGraphicsSceneMouseEvent* event);
bool QChart_override_virtual_mouseDoubleClickEvent(void* self, intptr_t slot);
void QChart_virtualbase_mouseDoubleClickEvent(void* self, QGraphicsSceneMouseEvent* event);
bool QChart_override_virtual_wheelEvent(void* self, intptr_t slot);
void QChart_virtualbase_wheelEvent(void* self, QGraphicsSceneWheelEvent* event);
bool QChart_override_virtual_inputMethodEvent(void* self, intptr_t slot);
void QChart_virtualbase_inputMethodEvent(void* self, QInputMethodEvent* event);
bool QChart_override_virtual_inputMethodQuery(void* self, intptr_t slot);
QVariant* QChart_virtualbase_inputMethodQuery(const void* self, int query);
bool QChart_override_virtual_supportsExtension(void* self, intptr_t slot);
bool QChart_virtualbase_supportsExtension(const void* self, int extension);
bool QChart_override_virtual_setExtension(void* self, intptr_t slot);
void QChart_virtualbase_setExtension(void* self, int extension, QVariant* variant);
bool QChart_override_virtual_extension(void* self, intptr_t slot);
QVariant* QChart_virtualbase_extension(const void* self, QVariant* variant);
bool QChart_override_virtual_isEmpty(void* self, intptr_t slot);
bool QChart_virtualbase_isEmpty(const void* self);

void QChart_protectedbase_updateMicroFocus(bool* _dynamic_cast_ok, void* self);
QObject* QChart_protectedbase_sender(bool* _dynamic_cast_ok, const void* self);
int QChart_protectedbase_senderSignalIndex(bool* _dynamic_cast_ok, const void* self);
int QChart_protectedbase_receivers(bool* _dynamic_cast_ok, const void* self, const char* signal);
bool QChart_protectedbase_isSignalConnected(bool* _dynamic_cast_ok, const void* self, QMetaMethod* signal);
void QChart_protectedbase_addToIndex(bool* _dynamic_cast_ok, void* self);
void QChart_protectedbase_removeFromIndex(bool* _dynamic_cast_ok, void* self);
void QChart_protectedbase_prepareGeometryChange(bool* _dynamic_cast_ok, void* self);
void QChart_protectedbase_setGraphicsItem(bool* _dynamic_cast_ok, void* self, QGraphicsItem* item);
void QChart_protectedbase_setOwnedByLayout(bool* _dynamic_cast_ok, void* self, bool ownedByLayout);

void QChart_delete(QChart* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
